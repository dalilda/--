{
	// Place your 笔记 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"html模板": {
		"prefix": "ht",
		"body": [
		  "<!DOCTYPE html>",
		  "<html lang=\"zh\">",
		  "<head>",
		  "    <meta charset = \"utf-8\" />",
		  "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
		  "    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">",
		  "    <title>玉树临风美少年,揽镜自顾夜不眠</title>",
		  "</head>",
		  "<body>",
		  "    $0",
		  "</body>",
		  "</html>"
		],
		"description": "html模板"
	  },
	"test class":{
		"prefix":"test",
		"body": [
			"class Test{",
			"\t$0",
			"}",
		]	
	},
	"class":{
		"prefix":"class",
		"body": [
			"class $1{",
			"\t$0",
			"}",
		]	
	},
	// "java code block":{
	// 	"prefix":"java",
	// 	"body": [
	// 		"```java",
	// 		"\t$0",
	// 		"```",
	// 	]	
	// },
	"java code block":{
		"prefix":"java",
		"body": [
			"```java",
			"\tclass Test{",
			"\t\tpublic static void main(String[] args){",
			"\t\t\t$0",
			"\t\t}",
			"\t}",
			"```",
		]	
	},
	"<":{
		"prefix":"xnyu",
		"body": [
			"< ",
		]	
	},
	"=":{
		"prefix":"dg",
		"body": [
			"= ",
		]	
	},
	"sanyuan":{
		"prefix":"sjyr",
		"body": [
			"($1>$2)?$3:$4;$0",
		]	
	},
	"(":{
		"prefix":"ok",
		"body": [
			"($1)$0",
		]	
	},
	"osout":{
		"prefix":"sout",
		"body": [
			"System.out.println($1);$0",
		]	
	},
	"case of switch case": {
		"prefix": "case",
		"body": [
		  "case $1:",
		  "    $2",
		  "    break;",
		  "$0"
		],
		"description": "case of switch case"
	  }
}